package com.apitesting.test;

import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import static org.testng.Assert.assertEquals;
import static org.testng.Assert.assertTrue;

import java.io.File;
import java.io.IOException;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;

public class DeleteUserRequest {
	ObjectMapper objectMapper = new ObjectMapper();
	String email;
    @BeforeTest
    public void setup() {
    	
        RestAssured.baseURI = "https://gorest.co.in";
        try {
            // Read JSON data from file into JsonNode
            JsonNode jsonNode = objectMapper.readTree(new File("./src/test/resources/addUser.json"));

             email = jsonNode.get("email").asText();
            System.out.println("Name::::::::::::::::: " + email);

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    
    
    //post -- add a user -- user id = 123 -- assert(201, body)
    //get --> get a user --> /users/123 -- 200 -- userid=123
        
    @Test
    public void deleteAddedUserTest() {
		/*
		 * RequestSpecification request = RestAssured.given();
		 * request.header("Authorization",
		 * "Bearer e4b8e1f593dc4a731a153c5ec8cc9b8bbb583ae964ce650a741113091b4e2ac6");
		 * System.out.println("Name:::::::::2:::::::: " + email);
		 * request.queryParam("email", "tripura@gmail.com");
		 * request.queryParam("status", "active");
		 * 
		 * Response response = request.get("/public/v2/users");
		 * 
		 * // =================
		 */        // 1. Add user - POST
        String userId = RestAssured.given()
            .header("Authorization", "Bearer e4b8e1f593dc4a731a153c5ec8cc9b8bbb583ae964ce650a741113091b4e2ac6")
            .queryParam("email", "tripura@gmail.com")
            .when().log().all()
            .get("/public/v2/users/")
            .then().extract().path("id").toString();
        
        
        
        // 3. Delete the user - DELETE
		/*
		 * RestAssured.given() .header("Authorization",
		 * "Bearer e4b8e1f593dc4a731a153c5ec8cc9b8bbb583ae964ce650a741113091b4e2ac6")
		 * .when().log().all() .delete("/public/v2/users/" + userId)
		 * .then().statusCode(204);
		 * 
		 * // 4. Try to get the user again - GET (expecting 404) RestAssured.given()
		 * .header("Authorization",
		 * "Bearer e4b8e1f593dc4a731a153c5ec8cc9b8bbb583ae964ce650a741113091b4e2ac6")
		 * .when().log().all() .get("/public/v2/users/" + userId)
		 * .then().statusCode(404);
		 */
        // 5. Update the user details - PUT
        // You can add code here to update user details and assert the response
        
        // Example:
        // RestAssured.given()
        //     .contentType(ContentType.JSON)
        //     .body(new File("./src/test/resources/updateUser.json"))
        //     .header("Authorization", "Bearer yourAccessTokenHere")
        // .when()
        //     .put("/public/v2/users/" + userId)
        // .then().statusCode(200);
    }
}
